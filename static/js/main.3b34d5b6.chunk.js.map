{"version":3,"sources":["Exchange.js","ExchangeForm.js","Header.js","App.js","index.js"],"names":["Exchange","props","exchange","exchangeHtml","style","color","amount","currencyFrom","currencyTo","rate","Number","toFixed","toUpperCase","id","ExchangeForm","base","useState","currencies","setCurrencies","useEffect","a","fetch","response","json","data","curr","label","value","Object","keys","rates","key","push","sort","b","nameA","nameB","getCurrencies","type","className","placeholder","onChange","name","autoFocus","map","readOnly","Header","App","setExchange","to","e","getRate","event","target","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3b34d5b6.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction Exchange(props) {\n        \n        const exchange = props.exchange\n        \n        let exchangeHtml = <p style={{ color: \"indianred\" }}><i>Please complete all fields</i></p>\n        \n        if (exchange.amount && exchange.currencyFrom && exchange.currencyTo && exchange.rate) {\n            exchangeHtml =\n            <p>Your\n                <span style={{ color: \"green\" }}><strong> {Number(exchange.amount).toFixed(2)} {exchange.currencyFrom.toUpperCase()} </strong></span>\n                will buy you\n                <span style={{ color: \"green\" }}><strong> {Number(exchange.amount*exchange.rate).toFixed(2)} {exchange.currencyTo.toUpperCase()} </strong></span>\n            </p>\n        }\n\n        return (\n            <div id=\"exchangeContainer\">\n                {exchangeHtml}\n            </div>\n        )\n}\n\nexport default Exchange","import React, {useState, useEffect} from \"react\"\n\nfunction ExchangeForm(props) {\n    const base = 'EUR'\n    const [ currencies, setCurrencies ] = useState([])\n    const exchange = props.exchange\n    \n    useEffect(() => {\n        async function getCurrencies() {\n            const response = await fetch(`https://api.exchangeratesapi.io/latest?base=${base}`)\n            const data = await response.json()\n            let curr = [{ label: \"Select\", value: \"\"} , { label: base, value: base }]\n            for (const key of Object.keys(data.rates)) {\n                curr.push({ label: key, value: key })\n            }\n            curr.sort((a, b) => {\n                const nameA = a.value.toUpperCase(); // ignore upper and lowercase\n                const nameB = b.value.toUpperCase(); // ignore upper and lowercase\n                if (nameA < nameB) {\n                    return -1;\n                }\n                if (nameA > nameB) {\n                    return 1;\n                }\n\n                // names must be equal\n                return 0;\n            })\n            setCurrencies(curr)\n        }\n        getCurrencies()\n    }, []);\n    \n    return (\n        <div id=\"exchangeFomrm\">\n            <p>\n                Convert\n                \n                <input\n                    type=\"number\"\n                    className=\"border border-secondary rounded-lg\"\n                    id=\"original-currency-amount\"\n                    placeholder=\"1.00\"\n                    value={exchange.amount}\n                    onChange={props.onChange}\n                    name=\"amount\"\n                    autoFocus\n                />\n\n                <select\n                    className=\"border border-secondary rounded-lg bg-white\"\n                    value={exchange.currencyFrom}\n                    onChange={props.onChange}\n                    name=\"currencyFrom\"\n                >\n                    {\n                        currencies.map(({ label, value }) => (\n                            <option key={value} value={value}>{label}</option>\n                        ))\n                    }\n                </select>\n                \n                to\n                \n                <select\n                    className=\"border border-secondary rounded-lg bg-white\"\n                    value={exchange.currencyTo}\n                    onChange={props.onChange}\n                    name=\"currencyTo\"\n                >\n                    {\n                        currencies.map(({ label, value }) => (\n                            <option key={value} value={value}>{label}</option>\n                        ))\n                    }\n                </select>\n            </p>\n            <p>\n                Exchange Rate:\n                \n                <input\n                    type=\"number\"\n                    className=\"border border-secondary rounded-lg bg-light\"\n                    id=\"exchange-rate\"\n                    placeholder=\"1.00\"\n                    value={exchange.rate}\n                    onChange={props.onChange}\n                    name=\"rate\"\n                    readOnly\n                />\n            </p>\n        </div>\n    )\n}\n\nexport default ExchangeForm","import React from \"react\"\n\nfunction Header() {\n    return (\n        <div id=\"header\">\n            <h1>Amazing Currency Converter</h1>\n        </div>\n    )\n}\n\nexport default Header","import React, {useState, useEffect} from \"react\"\nimport Exchange from \"./Exchange\"\nimport ExchangeForm from \"./ExchangeForm\"\nimport Header from \"./Header\"\n\nfunction App() {\n\n    const [ exchange, setExchange ] = useState({\n        amount: \"\",\n        currencyFrom: \"\",\n        currencyTo: \"\",\n        rate: \"\"\n    })\n\n    function handleChange(event) {\n        const {name, value} = event.target\n\n        setExchange({\n            ...exchange,\n            [name]: value\n            }\n        )\n    }\n\n    useEffect(() => {\n\n        async function getRate(base, to) {\n            const response = await fetch(`https://api.exchangeratesapi.io/latest?base=${base}`)\n            const data = await response.json()\n            setExchange(e => {\n              return {\n                ...e,\n                rate: data.rates[to]\n                }\n            })\n        }\n\n        if (exchange.currencyFrom && exchange.currencyTo) {\n            getRate(exchange.currencyFrom, exchange.currencyTo)\n        }\n\n    }, [exchange.currencyFrom, exchange.currencyTo])\n\n    return (\n        <div className=\"container-fluid shadow p-3 mb-5 bg-light rounded-lg card\">\n            <Header />\n            <ExchangeForm exchange={exchange} onChange={handleChange}/>\n            <Exchange exchange={exchange}/>\n        </div>\n    )\n}\n\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport './index.css';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\n  ReactDOM.render(<App />, document.getElementById(\"root\"))\n\n});\n"],"sourceRoot":""}